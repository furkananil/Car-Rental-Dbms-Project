// <auto-generated />
using System;
using Car_Rental_Dbms_Project;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Car_Rental_Dbms_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Car_Rental_Dbms_Project.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostaKodu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sehir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sokak")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("adresler");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Arac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KategoriId")
                        .HasColumnType("integer");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Yil")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("araclar", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Arac_Istatistikleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AracId")
                        .HasColumnType("integer");

                    b.Property<int>("KiralamaSayisi")
                        .HasColumnType("integer");

                    b.Property<int>("ToplamKilometre")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.ToTable("arac_istatistikleri");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Arac_Kategorileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("KategoriAd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("arac_kategorileri");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Arac_Tuketim_Bilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AracId")
                        .HasColumnType("integer");

                    b.Property<decimal>("YakitTuketimi")
                        .HasColumnType("numeric");

                    b.Property<string>("YakitTuru")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.ToTable("arac_tuketim_bilgileri");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Calisan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AdresId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.ToTable("calisanlar");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FaturaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KiralamaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("KiralamaId");

                    b.ToTable("faturalar");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Kiralama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AracId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("KiralamaBitisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("KiralamaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MusteriId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.HasIndex("MusteriId");

                    b.ToTable("kiralamalar");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AdresId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.ToTable("musteriler");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Odeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FaturaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("OdemeTutar")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("FaturaId");

                    b.ToTable("odemeler");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.BinekArac", b =>
                {
                    b.HasBaseType("Car_Rental_Dbms_Project.Arac");

                    b.Property<int>("AracId")
                        .HasColumnType("integer");

                    b.Property<int?>("AracId1")
                        .HasColumnType("integer");

                    b.Property<decimal>("BagajHacmi")
                        .HasColumnType("numeric");

                    b.HasIndex("AracId");

                    b.HasIndex("AracId1");

                    b.ToTable("binek_araclar", (string)null);
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.TicariArac", b =>
                {
                    b.HasBaseType("Car_Rental_Dbms_Project.Arac");

                    b.Property<int>("AracId")
                        .HasColumnType("integer");

                    b.Property<int?>("AracId1")
                        .HasColumnType("integer");

                    b.Property<int>("YukKapasitesi")
                        .HasColumnType("integer");

                    b.HasIndex("AracId");

                    b.HasIndex("AracId1");

                    b.ToTable("ticari_araclar", (string)null);
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Arac", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Arac_Kategorileri", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Arac_Istatistikleri", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Arac", "Arac")
                        .WithMany()
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arac");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Arac_Tuketim_Bilgileri", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Arac", "Arac")
                        .WithMany()
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arac");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Calisan", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Fatura", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Kiralama", "Kiralama")
                        .WithMany()
                        .HasForeignKey("KiralamaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kiralama");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Kiralama", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Arac", "Arac")
                        .WithMany()
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Car_Rental_Dbms_Project.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Arac");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Musteri", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Odeme", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Fatura", "Fatura")
                        .WithMany()
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.BinekArac", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Arac", "Arac")
                        .WithMany()
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Car_Rental_Dbms_Project.Arac", null)
                        .WithMany("BinekAraclar")
                        .HasForeignKey("AracId1");

                    b.HasOne("Car_Rental_Dbms_Project.Arac", null)
                        .WithOne()
                        .HasForeignKey("Car_Rental_Dbms_Project.BinekArac", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arac");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.TicariArac", b =>
                {
                    b.HasOne("Car_Rental_Dbms_Project.Arac", "Arac")
                        .WithMany()
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Car_Rental_Dbms_Project.Arac", null)
                        .WithMany("TicariAraclar")
                        .HasForeignKey("AracId1");

                    b.HasOne("Car_Rental_Dbms_Project.Arac", null)
                        .WithOne()
                        .HasForeignKey("Car_Rental_Dbms_Project.TicariArac", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arac");
                });

            modelBuilder.Entity("Car_Rental_Dbms_Project.Arac", b =>
                {
                    b.Navigation("BinekAraclar");

                    b.Navigation("TicariAraclar");
                });
#pragma warning restore 612, 618
        }
    }
}
